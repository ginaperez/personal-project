{"version":3,"sources":["photos/FurnLogo.png","redux/reducer.js","redux/store.js","components/Header/Header.js","components/Landing/Landing.js","api.js","components/Auth/AuthComponent.js","components/Purchase History/PurchaseHistoryComponent.js","components/Inventory/InventoryComponent.js","components/Cart/CartComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","user","cart","loading","registerMessage","loginMessage","popupMessage","SET_USER","LOGOUT_USER","ADD_TO_CART","SET_REGISTER_MESSAGE","SET_LOGIN_MESSAGE","SHOW_POPUP","HIDE_POPUP","hidePopup","type","payload","showPopup","message","setUser","createStore","state","action","applyMiddleware","promiseMiddleware","Header","props","toggle","logout","bind","toggler","this","setState","prevState","axios","delete","then","res","logOutUser","className","to","src","logo","alt","onClick","React","Component","mapDispatchToProps","connect","reduxState","Landing","changeTitle","API","login","register","session","inventory","search","orders","purchaseHistory","checkout","AuthComponent","registerEmail","registerPassword","loginEmail","loginPassword","email","user_id","post","password","loggedInUser","data","setRegisterMessage","setTimeout","setLoginMessage","onSubmit","e","preventDefault","htmlFor","id","autoComplete","value","onChange","target","invokedConnect","PurchaseHistoryComponent","getPurchaseHistory","get","purchaseHistoryResponse","map","purchaseHistoryItem","i","key","image","width","item_name","item_unit_price","item_qty","total_price","purchase_id","purchase_date","transaction_id","item_id","InventoryComponent","searchQuery","isLoading","getInventory","modifyCart","searchInventory","updateItemAddToCartQty","inventoryResponse","inventoryWithInitializedCartQty","inventoryItem","cartQty","infoMessage","response","itemId","itemQty","put","addToCart","productInteractionDisplay","placeholder","price","arr","CartComponent","getCart","updateCartItemQty","cartResponse","cartWithInitializedCartQty","cartItem","patch","freshCart","cartInteractionDisplay","length","clearCart","updateItemQtyInCart","App","title","popupMessageDisplay","exact","path","render","withRouter","Boolean","window","location","hostname","match","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56440010.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FurnLogo.7d68e979.png\";","const initialState = {\n    user: null,\n    cart: [],\n    loading: false,\n    registerMessage: \"\",\n    loginMessage: \"\",\n    popupMessage: \"\"\n};\n\nexport const SET_USER = \"SET_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const SET_REGISTER_MESSAGE = \"SET_REGISTER_MESSAGE\";\nexport const SET_LOGIN_MESSAGE = \"SET_LOGIN_MESSAGE\";\nexport const SHOW_POPUP = \"SHOW_POPUP\";\nexport const HIDE_POPUP = \"HIDE_POPUP\";\n\nexport default function reducer(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case SET_USER:\n            return { \n                ...state,\n                user: payload \n            };\n        case LOGOUT_USER: \n            return {\n                ...state,\n                user: null\n            }\n        case SET_REGISTER_MESSAGE:\n            return { \n                ...state,\n                registerMessage: payload \n            };\n        case SET_LOGIN_MESSAGE:\n            return {\n                ...state,\n                loginMessage: payload\n            }\n        case SHOW_POPUP:\n            return {\n                ...state,\n                popupMessage: payload\n            }\n        case HIDE_POPUP:\n            return {\n                ...state,\n                popupMessage: payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport function hidePopup() {\n    return {\n        type: HIDE_POPUP,\n        payload: \"\"\n    }\n}\n\nexport function showPopup(message) {\n    return {\n        type: SHOW_POPUP,\n        payload: message\n    }\n};\n\nexport function setUser(user) {\n    return {\n        type: SET_USER,\n        payload: user\n    };\n};\n\nexport function setRegisterMessage(message) {\n    return {\n        type: SET_REGISTER_MESSAGE,\n        payload: message\n    };\n};\n\nexport function setLoginMessage(message) {\n    return {\n        type: SET_LOGIN_MESSAGE,\n        payload: message\n    };\n};\n\nexport function logOutUser() {\n    return {\n        type: LOGOUT_USER,\n        payload: null\n    }\n};\n\nexport function addToCart(arr) {\n    return {\n        type: ADD_TO_CART,\n        payload: arr\n    }\n};\n","import reducer from './reducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nexport default createStore(reducer, applyMiddleware(promiseMiddleware));","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, logOutUser } from '../../redux/reducer';\nimport logo from '../../photos/FurnLogo.png';\nimport axios from 'axios';\nimport './Header.scss';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggle: false\n        }\n    this.logout = this.logout.bind(this);\n    this.toggler = this.toggler.bind(this);\n}\n\n    toggler() {\n        this.setState(prevState => {\n            return {\n                toggle: !prevState.toggle\n            };\n        });\n    }\n\n    logout() {\n        axios.delete('/api/logout').then(res => {\n            this.props.logOutUser();\n        });\n    }\n\n    render() {\n        return (\n            <header className='header'>\n                <div className='divider'>\n                <div className='head'>\n                    <NavLink to='/'>\n                        <img className='logo' src={logo} alt='logo'></img>\n                    </NavLink>\n\n                    {!this.props.user ? (\n                        <nav className={this.state.toggle ? 'show' : ''}>\n                            <NavLink className='navlink' to='/products'>Products</NavLink>\n                            <NavLink className='navlink' to='/cart'>Cart</NavLink>\n                            <NavLink className='navlink' to='/login-register'>Login</NavLink>\n                        </nav>\n                    ) : (\n                        <nav className={this.state.toggle ? 'show' : ''}>\n                            <NavLink className='navlink' to='/products'>Products</NavLink>\n                            <NavLink className='cart' to='/cart'>Cart</NavLink>\n                            <NavLink className='navlink' to='/purchase_history'>Purchase History</NavLink>\n                            <NavLink className='navlink' onClick={() => this.logout()} to='/logout'>Logout</NavLink>\n                        </nav>\n                    )}\n                </div>\n                </div>\n            </header>\n        );\n    }\n\n}\n\nfunction mapReduxStateToProps(reduxState) {\n    return reduxState;\n}\n\nconst mapDispatchToProps = {\n    setUser,\n    logOutUser\n};\n\nexport default connect(mapReduxStateToProps, mapDispatchToProps)(Header);","import React from 'react';\nimport './Landing.scss';\nimport { Link } from 'react-router-dom';\n\nexport default class Landing extends React.Component {\n    componentDidMount() {\n        this.props.changeTitle('Login');\n    }\n    render() {\n        return (\n            <div className='landing-main'>\n                <div className='picture-element'>\n                    <div className='header-container'>\n                        <h1 >Semi-Annual Sale</h1>\n                        <h2>Sofas, console tables, and so much more.</h2>\n                        <Link to='/products'><button className='landing-button'>Shop Now</button></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","const API = {\n\tlogin: '/api/login',\n\tregister: '/api/register',\n\tsession: '/api/session',\n\tlogout: '/api/logout',\n\tinventory: '/api/products',\n\tsearch: '/api/search',\n\torders: '/api/orders',\n\tpurchaseHistory: '/api/purchaseHistory',\n\tcart: '/api/cart',\n\tcheckout: '/api/checkout'\n}\n\nexport default API;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport API from '../../api';\nimport { connect } from 'react-redux';\nimport { setUser, setRegisterMessage, setLoginMessage, showPopup, hidePopup } from '../../redux/reducer';\nimport { Redirect } from 'react-router-dom';\nimport './AuthComponent.scss';\n\nclass AuthComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            registerEmail: \"\",\n\t\t\tregisterPassword: \"\",\n\t\t\tloginEmail: \"\",\n\t\t\tloginPassword: \"\",\n\t\t\tsession: {\n\t\t\t\temail: \"\",\n\t\t\t\tuser_id: null\n\t\t\t}\n        }\n        this.register = this.register.bind(this);\n\t\tthis.login = this.login.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n    }\n\n    async register() {\n        const { registerEmail, registerPassword } = this.state;\n        var loggedInUser\n        try {\n            loggedInUser = await axios.post(API.register, {\n                email: registerEmail,\n                password: registerPassword\n            });\n            this.props.setUser(loggedInUser.data);\n            // clear the registration message\n            this.props.setRegisterMessage(\"\");\n        } catch (err) {\n            // inform the user why the registration attempt failed\n            this.props.showPopup(\"User already exists! Log in to continue.\");\n            setTimeout(this.props.hidePopup, 5000);\n        }\n    }\n    \n    async login() {\n        const { loginEmail, loginPassword } = this.state;\n        var loggedInUser;\n        try {\n            loggedInUser = await axios.post(API.login, {\n                email: loginEmail,\n                password: loginPassword\n            });\n            this.props.setUser(loggedInUser.data);\n            this.props.setLoginMessage(\"\");\n        } catch (err) {\n            this.props.showPopup(\"User not found! Please create an account.\");\n            setTimeout(this.props.hidePopup, 5000);\n        }\n    }\n    \n    async logout() {\n        const loggedInUser = await axios.post(API.logout, {});\n        this.props.setUser(loggedInUser);\n    }\n    \n\n    render() {\n        const { loginEmail, loginPassword, registerEmail, registerPassword } = this.state;\n        return this.props.user ? (\n            <Redirect to='/products' />\n        ) : (\n            <div className=\"main-area\">\n                <div className='auth-container'>\n                    <div className='input-container'>\n                        <form onSubmit={e => { e.preventDefault(); this.login(); }}>\n                                <h2 className='title'>Sign In</h2>\n                                <h3 className='subtext'>Sign in below to access your account.</h3>\n                                <label htmlFor=\"email\">Email: </label>\n                                <input id=\"login-email\" autoComplete=\"username\" type=\"email\" value={loginEmail} onChange={(e) => this.setState({ loginEmail: e.target.value })} />\n                                <label htmlFor=\"password\">Password: </label>\n                                <input id=\"login-password\" autoComplete=\"current-password\" type=\"password\" value={loginPassword} onChange={(e) => this.setState({ loginPassword: e.target.value })} />\n                            <button className=\"input-button\">Login</button>\n                        </form>\n                        {this.props.loginMessage}\n                    </div>\n                    <div className='input-container'>\n                        <form onSubmit={e => { e.preventDefault(); this.register(); }}>\n                                <h2 className='title'>Register</h2>\n                                <h3 className='subtext'>Don't have an account? Register below.</h3>\n                                <label htmlFor=\"email\">Email: </label>\n                                <input id=\"register-email\" autoComplete=\"username\" type=\"email\" value={registerEmail} onChange={(e) => this.setState({ registerEmail: e.target.value })} />\n                                <label htmlFor=\"password\">Password: </label>\n                                <input id=\"register-password\" autoComplete=\"new-password\" type=\"password\" value={registerPassword} onChange={(e) => this.setState({ registerPassword: e.target.value })} />\n                            <button className=\"input-button\">Register</button>\n                            {this.props.registerMessage}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapReduxStateToProps(reduxState) {\n\treturn reduxState\n}\n\nconst mapDispatchToProps = {\n    setUser,\n    setRegisterMessage,\n    setLoginMessage,\n    showPopup,\n    hidePopup\n};\n\nconst invokedConnect = connect(mapReduxStateToProps, mapDispatchToProps)\n\nexport default invokedConnect(AuthComponent);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport API from '../../api';\nimport { connect } from 'react-redux';\nimport './PurchaseHistory.scss';\n\nclass PurchaseHistoryComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            purchaseHistory: []\n        }\n        this.getPurchaseHistory = this.getPurchaseHistory.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPurchaseHistory();\n    }\n\n    async getPurchaseHistory() {\n\t\tconst purchaseHistoryResponse = await axios.get(`${API.purchaseHistory}`)\n\n\t\tthis.setState({ purchaseHistory: purchaseHistoryResponse.data });\n    }\n    \n    render() {\n        return (\n            <div className=\"purchase-history\">\n                {\n                    this.state.purchaseHistory.map((purchaseHistoryItem, i) => {\n                        return (\n                            <div className=\"purchase-history-details\"  key={i}>\n                                <p><img src= {purchaseHistoryItem.image} width=\"200px\" alt='Purchase History Item'/></p>\n                                <p className='ph-item-name'>{purchaseHistoryItem.item_name}</p>\n                                <p className='ph-item'>${purchaseHistoryItem.item_unit_price}.00</p>\n                                <p className='ph-item'>Qty: {purchaseHistoryItem.item_qty}</p>\n                                <p className='ph-item'>Total Price: ${purchaseHistoryItem.total_price}.00</p>\n                                <p className='ph-item'>Purchase ID: {purchaseHistoryItem.purchase_id}</p>\n                                <p className='ph-item'>Purchase date: {purchaseHistoryItem.purchase_date}</p>\n                                <p className='ph-item'>Transaction ID: {purchaseHistoryItem.transaction_id}</p>\n                                <p className='ph-item'>Item ID: {purchaseHistoryItem.item_id}</p>\n                            </div>\n                        )\n                    })\n                }\n\t\t\t</div>\n        )\n    }\n}\n\nfunction mapReduxStateToProps(reduxState) {\n    return reduxState\n}\n\nexport default connect(mapReduxStateToProps)(PurchaseHistoryComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart, showPopup, hidePopup } from '../../redux/reducer';\nimport axios from 'axios';\nimport API from '../../api';\nimport { GoSearch } from 'react-icons/go';\nimport './Inventory.scss';\n\nclass InventoryComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inventory: [],\n            searchQuery: \"\",\n            isLoading: true,\n            toggle: false,\n            user: null\n        }\n        this.getInventory = this.getInventory.bind(this);\n        this.modifyCart = this.modifyCart.bind(this);\n        this.searchInventory = this.searchInventory.bind(this);\n        this.updateItemAddToCartQty = this.updateItemAddToCartQty.bind(this);\n    }\n\n    componentDidMount() {\n        this.getInventory();\n    };\n\n    async getInventory() {\n        try {\n            const inventoryResponse = await axios.get('/api/products');\n            const inventoryWithInitializedCartQty = inventoryResponse.data.map((inventoryItem) => {\n                inventoryItem.cartQty = 1;\n                return inventoryItem;\n            });\n    \n            this.setState({ inventory: inventoryWithInitializedCartQty, infoMessage: \"\" })\n        } catch (err) {\n            this.setState({infoMessage: err.response.data})\n        }\n        \n    }\n    \n    async modifyCart(itemId, itemQty) {\n\t\tif (itemQty === 0) {\n\t\t\tawait axios.delete(`${API.cart}/${itemId}`);\n\t\t} else {\n            try {\n                await axios.put(API.cart, {\n                    itemId: itemId,\n                    itemQty: itemQty\n                });\n                this.props.showPopup(\"Your cart has been successfully updated!\");\n                setTimeout(this.props.hidePopup, 5000);\n            } catch (err) {\n                this.props.showPopup(\"Your cart has failed to update. Please try again!\");\n                setTimeout(this.props.hidePopup, 5000);\n            }\n\t\t\t\n\t\t}\n    }\n\n    async searchInventory() {\n\t\tconst { searchQuery } = this.state;\n\t\tconst inventoryResponse = await axios.get(`${API.search}?query=${searchQuery}`);\n\n\t\tthis.setState({ inventory: inventoryResponse.data })\n    }\n\n    updateItemAddToCartQty(itemId, itemQty) {\n\t\tvar { inventory } = this.state;\n\t\tinventory = inventory.map((inventoryItem) => {\n\t\t\tif (inventoryItem.item_id === itemId) {\n\t\t\t\tinventoryItem.cartQty = itemQty;\n\t\t\t}\n\t\t\treturn inventoryItem\n\t\t})\n\n\t\tthis.setState({ inventory: inventory });\n    }\n    \n    toggler() {\n        this.setState(prevState => {\n            return {\n                toggle: !prevState.toggle\n            };\n        });\n    }\n\n    async buttonAddToCart (item_id, item_qty) {\n        let cart = await axios.put('/api/cart', {item_id, item_qty});\n        this.props.addToCart(cart.data);\n    };\n    \n    render() {\n        const { searchQuery, infoMessage } = this.state;\n\n        var productInteractionDisplay = <div>{infoMessage}</div>;\n        if(infoMessage) {\n            productInteractionDisplay = <div>{infoMessage}</div>\n        } else {\n            const loggedInUser = this.props.user;\n            if(loggedInUser) {\n                productInteractionDisplay = <div>\n                    <button className=\"wide-element add-to-cart-btn\">Add To Cart</button>\n                </div>\n            } else {\n                productInteractionDisplay = <div className='interaction-display'>Please sign in to add products to your cart!</div>\n            }\n        }\n\n        return (\n            <div className='inventory-main-area'>\n                <div className=\"search-area-inventory\">\n                    <form onSubmit={e => { e.preventDefault(); this.searchInventory(); }}>\n                        <input className='search-input-box' value={searchQuery} placeholder=\"Search...\" onChange={(e) => { this.setState({ searchQuery: e.target.value }); }} />\n                        <button className='search-button'><GoSearch /></button>\n                    </form>\n                </div>\n                <div className=\"inventory-grid\">\n                    {\n                        this.state.inventory.map((inventoryItem, i) => {\n                            return (\n                                <div key={i}>\n                                    <div className=\"inventory-child\" key={i}>\n                                        <div className=\"inventory-child-spacer\">\n                                            <img alt={'Inventory item ' + inventoryItem.item_name} src={inventoryItem.image} width=\"200px\" />\n                                        </div>\n                                        <div className=\"inventory-child-spacer\">\n                                            <h2>{inventoryItem.item_name}</h2>\n                                        </div>\n                                        <div className=\"wide-element inventory-child-spacer\">\n                                            <form onSubmit={(e) => { e.preventDefault(); this.modifyCart(inventoryItem.item_id, inventoryItem.cartQty) }}>\n                                                <div className=\"price-display\">\n                                                            ${inventoryItem.price}.00\n                                                </div>\n                                                <div className=\"item-pairing\">\n                                                    <input className=\"item-quantity-change\" type=\"number\" value={inventoryItem.cartQty} onChange={(e) => { this.updateItemAddToCartQty(inventoryItem.item_id, e.target.value); }} />\n                                                </div>\n                                                {productInteractionDisplay}\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapReduxStateToProps(reduxState) {\n    return reduxState;\n};\n\nconst mapDispatchToProps = {\n    addToCart,\n    showPopup,\n    hidePopup\n};\n\nconst invokedConnect = connect(mapReduxStateToProps, mapDispatchToProps);\n\nexport default invokedConnect(InventoryComponent);","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport API from '../../api';\nimport './Cart.scss';\n\nclass CartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cart: []\n        }\n        this.getCart = this.getCart.bind(this);\n\t\tthis.checkout = this.checkout.bind(this);\n\t\tthis.updateItemAddToCartQty = this.updateItemAddToCartQty.bind(this);\n        this.updateCartItemQty = this.updateCartItemQty.bind(this);\n        this.modifyCart = this.modifyCart.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCart();\n    }\n\n    async getCart() {\n\t\ttry {\n\t\t\tconst cartResponse = await axios.get(API.cart);\n\t\t\tconst cartWithInitializedCartQty = cartResponse.data.map((cartItem) => {\n\t\t\t\tcartItem.cartQty = cartItem.item_qty;\n\t\t\t\treturn cartItem;\n\t\t\t});\n\n\t\t\tthis.setState({ cart: cartWithInitializedCartQty, infoMessage: \"\" });\n\t \t} catch (err) {\n\t\t\tthis.setState({infoMessage: err.response.data});\n\t\t}\n\t}\n\n\t// modifyCart will ADD itemQty to the cart, or it will insert the new\n\t// itemId into the cart w/ itemQty if it is not in the cart yet\n\tasync modifyCart(itemId, itemQty) {\n\t\tif (itemQty === 0) {\n\t\t\tawait axios.delete(`${API.cart}/${itemId}`);\n\t\t} else {\n\t\t\tawait axios.put(API.cart, {\n\t\t\t\titemId: itemId,\n\t\t\t\titemQty: itemQty\n\t\t\t});\n\t\t}\n\t\tthis.getCart();\n\t}\n\n\t// updateItemQtyInCart will SET the itemQty for the given itemId in the cart\n\t// This is different from modifyCart in that it only works on existing cart itemsx\n\tasync updateItemQtyInCart(itemId, itemQty) {\n\t\tif (itemQty === 0) {\n\t\t\tawait axios.delete(`${API.cart}/${itemId}`);\n\t\t} else {\n\t\t\tawait axios.patch(API.cart, {\n\t\t\t\titemId: itemId,\n\t\t\t\titemQty: itemQty\n\t\t\t});\n\t\t}\n\t\tthis.getCart();\n\t}\n\n\tasync clearCart() {\n\t\tconst freshCart = await axios.delete(API.cart);\n\n\t\tthis.setState({ cart: freshCart.data });\n\t\tthis.getCart();\n    }\n    \n    async getPurchaseHistory() {\n\t\tconst purchaseHistoryResponse = await axios.get(`${API.purchaseHistory}`)\n\n\t\tthis.setState({ purchaseHistory: purchaseHistoryResponse.data });\n    }\n\n\tasync checkout() {\n\t\tconst freshCart = await axios.post(API.checkout);\n\n\t\tthis.setState({ cart: freshCart.data });\n\t\tthis.getPurchaseHistory();\n\t\tthis.getCart();\n\t}\n\n\tupdateItemAddToCartQty(itemId, itemQty) {\n\t\tvar { inventory } = this.state;\n\n\t\tinventory = inventory.map((inventoryItem) => {\n\t\t\tif (inventoryItem.item_id === itemId) {\n\t\t\t\tinventoryItem.cartQty = itemQty;\n\t\t\t}\n\t\t\treturn inventoryItem\n\t\t})\n\n\t\tthis.setState({ inventory: inventory });\n\t}\n\n\tupdateCartItemQty(itemId, itemQty) {\n\t\tvar { cart } = this.state;\n\n\t\tcart = cart.map((cartItem) => {\n\t\t\tif (cartItem.item_id === itemId) {\n\t\t\t\tcartItem.cartQty = itemQty;\n\t\t\t}\n\t\t\treturn cartItem\n\t\t})\n\n\t\tthis.setState({ cart: cart });\n\t}\n\n\n    render() {\n\t\tconst { infoMessage, cart } = this.state;\n\t\t\n\t\tvar cartInteractionDisplay = <div>{infoMessage}</div>;\n\t\tif (infoMessage) {\n\t\t\tcartInteractionDisplay = <div>{infoMessage}</div>;\n\t\t} else {\n\t\t\tif (cart.length) {\n\t\t\t\tcartInteractionDisplay = <div className='interaction-display'>\n\t\t\t\t\t<button className=\"wide-element\" onClick={() => this.clearCart()}>Empty Cart</button>\n\t\t\t\t\t<button className=\"wide-element\" onClick={() => this.checkout()}>Checkout</button>\n\t\t\t\t</div>\n\t\t\t} else {\n\t\t\t\tcartInteractionDisplay = <div className='empty-cart-display'>\n\t\t\t\t\tYour cart is empty!\n\t\t\t\t</div>\n\t\t\t}\n\t\t}\n\n        return (\n            <div className=\"cart-view\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.cart.map((cartItem, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"cart-view\" key={i}>\n                                        <div className=\"cart-item\">\n                                        <p><img className=\"cart-item-picture\" src={cartItem.image} alt='Cart Item'/></p>\n                                        <p className='cart-item-name'>{cartItem.item_name}</p>\n\t\t\t\t\t\t\t\t\t\t<p>${cartItem.item_unit_price}.00</p>\n                                        <p>Qty: {cartItem.item_qty}</p>\n\t\t\t\t\t\t\t\t\t\t<p>Total Price: ${cartItem.total_price}.00</p>\n                                        \n\t\t\t\t\t\t\t\t\t\t<form onSubmit={(e) => { e.preventDefault(); this.updateItemQtyInCart(cartItem.item_id, cartItem.cartQty) }}>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" value={cartItem.cartQty} onChange={(e) => { this.updateCartItemQty(cartItem.item_id, e.target.value); }} />\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"form-button\">Update Item Quantity</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t<button className=\"form-button\" onClick={() => { this.modifyCart(cartItem.item_id, 0); }}>Delete from Cart</button>\n\t\t\t\t\t\t\t\t\t</div>\n                                    </div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className='bottom-buttons'>\n\t\t\t\t\t\t\t{cartInteractionDisplay}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        )\n    }\n}\n\nfunction mapReduxStateToProps(reduxState) {\n    return reduxState\n}\n\nexport default connect(mapReduxStateToProps)(CartComponent)","import React from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, showPopup } from './redux/reducer';\nimport { MdCancel } from 'react-icons/md';\nimport Header from './components/Header/Header';\nimport Landing from './components/Landing/Landing';\nimport AuthComponent from './components/Auth/AuthComponent';\nimport PurchaseHistoryComponent from './components/Purchase History/PurchaseHistoryComponent';\nimport InventoryComponent from './components/Inventory/InventoryComponent';\nimport CartComponent from './components/Cart/CartComponent';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Login'\n\t};\n\tthis.changeTitle = this.changeTitle.bind(this);\n  }\n\n  changeTitle(title) {\n    this.setState({\n      title: title\n    });\n  }\n\n  render() {\n    const { popupMessage } = this.props;\n    var popupMessageDisplay = <div className=\"popup\"><span className=\"closePopup\" onClick={() => {this.props.showPopup(\"\");}}><MdCancel /></span>{popupMessage}</div>\n    if (popupMessage === \"\") {\n      popupMessageDisplay = <div className=\"popup-hidden\"></div>\n    }\n    return (\n      <div className='App'>\n        <Header title={this.state.title} user={this.props.user} />\n        {popupMessageDisplay}\n        <Switch>\n          <Route exact path='/' render={props => (\n            <Landing changeTitle={this.changeTitle} {...props}/>\n          )}\n          />\n          <Route path='/login-register' render={props => (\n            <AuthComponent changeTitle={this.changeTitle} {...props} />\n          )}\n          />\n          <Route path='/cart' render={props => (\n            <CartComponent changeTitle={this.changeTitle} {...props} />\n          )}\n          />\n            <Route path='/products' render={props => (\n              <InventoryComponent changeTitle={this.changeTitle} {...props} />\n            )}\n            />\n          }\n          {this.props.user && (\n            <Route path='/purchase_history' render={props => (\n              <PurchaseHistoryComponent changeTitle={this.changeTitle} {...props} />\n            )}\n            />\n          )}\n          <Route path='*' render={() => {\n            return <Redirect to='/' />;\n          }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapReduxStateToProps (reduxState) {\n  return reduxState\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  showPopup\n};\n\nconst invokedConnect = connect(mapReduxStateToProps, mapDispatchToProps);\n\nexport default invokedConnect(withRouter(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}